pipeline {
    agent none
    stages {
        stage('dockertest') {
            agent {
                // Equivalent to "docker build -f Dockerfile --target test ."
                dockerfile {
                    filename 'Dockerfile'
                    additionalBuildArgs '--target test'
                    // Binds the working directory
                    args "-v ${env.WORKSPACE}:/usr/src/app"
                }
            }
            steps {
                echo "Testing"
            }
        }
        stage('lint') {
            agent any;
            steps {
                bat """
                    mkdir reports
                    docker build -t pemjh:lint --target lint .
                    docker run --rm -t -v ${env.WORKSPACE}:/usr/src/app pemjh:lint
                """
                
                recordIssues(
                    tool: pyLint()
                )
            }
        }
        stage('flake8') {
            agent any;
            steps {
                bat """
                    docker build -t pemjh:flake8 --target flake8 .
                    docker run --rm -t -v ${env.WORKSPACE}:/usr/src/app pemjh:flake8
                """
                
                recordIssues(
                    tool: flake8()
                )
            }
        }
        stage('test') {
            agent any;
            steps {
                bat """
                    docker build -t pemjh:test --target test .
                    docker run --rm -t -v ${env.WORKSPACE}:/usr/src/app pemjh:test
                """
                junit 'reports/pytest.xml'
            }
        }
        stage('coverage') {
            agent any;
            steps {
                publishCoverage adapters: [cobertura('coverage.xml')]
            }
        }
    }
}